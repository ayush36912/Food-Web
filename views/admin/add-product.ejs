<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title><%= pageTitle %></title>
  
   <style>/* Reset default browser styles */
    body, h1, h2, h3, p, ul, li {
        margin: 0;
        padding: 0;
    }
    
    /* Set body font and background color */
    body {
        font-family: Arial, sans-serif;
        background-color: #fff;
        color: #333;
    }
    
    /* Main styling */
    main {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }
    
    /* Form styling */
    .product-form {
        background-color: #f7f7f7;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    .form-control {
        margin-bottom: 15px;
    }
    
    label {
        display: block;
        margin-bottom: 5px;
    }
    
    input[type="text"],
    input[type="number"],
    input[type="date"],
    textarea {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }
    
    textarea {
        resize: vertical;
    }
    
    .invalid {
        border-color: #f00;
    }
    
    .btn {
        padding: 10px 20px;
        background-color: #333;
        color: #fff;
        border: none;
        border-radius: 3px;
        cursor: pointer;
        transition: background-color 0.3s;
    }
    
    .btn:hover {
        background-color: #555;
    }
    
    
.main-header {
    background-color: #333;
    padding: 20px;
}

.main-header__nav {
    display: flex;
    justify-content: space-around;
}

.main-header__item-list {
    list-style: none;
    padding: 0;
}

.main-header__item {
    display: inline;
}

.main-header__item a {
    color: #fff;
    text-decoration: none;
    padding: 8px 16px;
    display: inline-block;
}

.main-header__item a:hover {
    background-color: #ddd;
    color: black;
}

main {
    padding: 20px;
}

    /* User message styling */
    .user-message {
        margin-bottom: 15px;
        padding: 10px;
        border-radius: 5px;
    }
    
    .user-message--error {
        background-color: #f00;
        color: #fff;
    }
    </style>
</head>

<body>
  <div class="backdrop"></div>
  <header class="main-header">
      <nav class="main-header__nav">
        <ul class="main-header__item-list">
            <li class="main-header__item">
                <a class="Class1" href="/admin/add-product">Add Product</a>
            </li>
            <li class="main-header__item">
                <a class="Class2" href="/admin/add-category">Manage Category</a>
            </li>
            <li class="main-header__item">
                <a class="Class3" href="/admin/get-all-products">Admin Products</a>
            </li>
            <li class="main-header__item">
                <a class="Class3" href="/admin/all-user">User details</a>
            </li>
            <li class="main-header__item">
                <form class="main-header__item"action="/admin/logout" method="post">
                    <button class="main-header__item"type="submit">Logout</button>
                </form>
            </li>
        </ul>
      </nav>
  </header>
  
    <main>
        
        
        <form class="product-form" action="/admin/add-product" method="POST" enctype="multipart/form-data">
            <div class="form-control">
                <label for="title">Title</label>
                <input 
                    class="<%= validationErrors.find(e => e.param === 'title') ? 'invalid' : '' %>"
                    type="text" 
                    name="title" 
                    id="title" 
                    value="<% if (hasError) { %><%= product.title %><% } %>"  required>
                    
                    <% if(validationErrors.length > 0) {%>
                        <% if(validationErrors.find((e)=> e.path === "title")) { %>
                          <span style="color: red;"><%= validationErrors.find((e)=> e.path === "title").msg %></span>
                          <% } %><% } %>
            </div>
            <div class="form-control">
                <label for="image">Image</label>
                <input 
                    type="file" 
                    name="image"
                    accept='image/*' 
                    id="image"
                    value="<% if (hasError) { %><%= product.image %><% } %>"required> 
                    <% if (locals.messages && locals.messages.error) { %>
                        <div class="alert alert-danger" role="alert">
                            <%= locals.messages.error %>
                        </div>
                    <% } %>
                    
                    <% if (locals.messages && locals.messages.success) { %>
                        <div class="alert alert-success" role="alert">
                            <%= locals.messages.success %>
                        </div>
                    <% } %>
            </div>
            <div class="form-control">
                <label for="price">Price</label>
                <input 
                    class="<%= validationErrors.find(e => e.param === 'price') ? 'invalid' : '' %>"
                    type="number" 
                    name="price"  
                    id="price"
                    value="<% if (hasError) { %><%= product.price %><% } %>"required>
                    <% if(validationErrors.length > 0) {%>
                        <% if(validationErrors.find((e)=> e.path === "price")) { %>
                          <span style="color: red;"><%= validationErrors.find((e)=> e.path === "price").msg %></span>
                          <% } %><% } %>
            </div>
            <div class="form-control">
                <label for="description">Description</label>
                <textarea 
                    class="<%= validationErrors.find(e => e.param === 'description') ? 'invalid' : '' %>"
                    name="description" 
                    id="description" 
                     
                    rows="5" required><% if (hasError) { %><%= product.description %><% } %></textarea>
                    <% if(validationErrors.length > 0) {%>
                        <% if(validationErrors.find((e)=> e.path === "description")) { %>
                          <span style="color: red;"><%= validationErrors.find((e)=> e.path === "description").msg %></span>
                          <% } %><% } %>
            </div>
            <div class="form-control">
                <label for="date">Expire-Date</label>
                <input type="date"
                    id="expireDate" 
                    name="expireDate" 
                    class="expireDate"  
                    value="<% if (hasError) { %><%= product.expireDate %><% } %>"
                    min="<%= new Date().toISOString().split('T')[0] %>"
                    max="<%= new Date(new Date().setFullYear(new Date().getFullYear() + 1)).toISOString().split('T')[0] %>"
                    required>
       
                    </div>
            <div class="form-control">
                <label for="category">Add Category</label>
                
               
                <%if(!hasError){%>
                    <% category.forEach(cat => { %>
                        <%= cat.name %>
                        <input
                              type="checkbox" 
                              name="category"
                              value="<%=cat._id%>" >
                      <% }); %>

                    <%}%>

                <%if(hasError){%>
                    <% product.category.forEach(cat => { %>
                        <%= cat.name %>
                        <input
                                type="checkbox" 
                                name="category"
                                value="<%=cat._id%>" checked>
                        <% }); %>
                        <% category.forEach(cat => { %>
                            <%= cat.name %>
                            <input
                                    type="checkbox" 
                                    name="category"
                                    value="<%=cat._id%>">
                            <% }); %>
                    <%}%>
               
                

    
            </div>
           

        

           
          
            <button class="btn" type="submit">Add Product</button>
        </form>
    </main>
    <script>
        
   window.addEventListener('pageshow', function(event) {
        if (event.persisted) {
            location.reload(true);
        }
    });
        document.addEventListener('DOMContentLoaded', function() {
        var numberInput = document.getElementById('price');
    
        numberInput.addEventListener('input', function() {
        var inputValue = this.value;
        
        // Remove non-numeric characters
        inputValue = inputValue.replace(/\D/g, '');
        
        // Limit to 3 digits
        inputValue = inputValue.slice(0, 5);
        
        // Update input value
        this.value = inputValue;
    });
});
document.addEventListener('DOMContentLoaded', function() {
    var textInput = document.getElementById('title');

    textInput.addEventListener('input', function() {
        var inputValue = this.value;

        // Limit to 20 characters
        inputValue = inputValue.trimLeft();

        inputValue = inputValue.slice(0, 35);

        // Update input value
        this.value = inputValue;
    });
});
document
      .getElementById("title")
      .addEventListener("keypress", function (event) {
        var charCode = event.keyCode || event.which;
        var charStr = String.fromCharCode(charCode);
        if (!/[a-zA-Z\s]/.test(charStr)) {
          event.preventDefault();
        }
      });
      document.addEventListener('DOMContentLoaded', function() {
    var descriptionInput = document.getElementById('description');

    descriptionInput.addEventListener('input', function() {
        var inputValue = this.value;

        // Trim whitespaces at the beginning
        inputValue = inputValue.trimLeft();

        // Update input value
        this.value = inputValue;
    });
});

   

    </script>
</body>

</html>